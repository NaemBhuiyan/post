{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/CreateCategory.js","components/CreateNewCategoryModal.js","components/PostForm.js","components/EditFormModal.js","components/AllPost.js","components/Home.js","components/Navbar.js","App.js","redux/reducers/postreducer.js","redux/reducers/catagoriesReducer.js","redux/reducers/index.js","store.js","index.js"],"names":["ADD_CATEGORY","ADD_POST","EDIT_POST","DELETE_POST","addCatagories","id","type","CreateCategory","setCatagories","useDispatch","useState","newLabel","setNewLabel","newValue","setNewValue","className","Row","Col","xs","Form","FormGroup","Label","Input","name","placeholder","value","onChange","target","Button","color","onClick","label","CreateNewCategoryModal","newCatagoriesModal","setNewCatagoriesModal","setNewCatagoriesValue","newCatagoriesValue","toggle","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Array","isArray","PostForm","handleDispatch","targetPost","btnText","catagories","useSelector","state","catagoriesReducer","title","setTitle","content","setContent","categories","multiSelectOptions","setMultiSelectOptions","useEffect","isDuplicate","every","item","some","v","console","log","prev","for","isClearable","onCreateOption","isMulti","options","Set","values","e","preventDefault","handleSubmit","EditFormModal","editModal","setEditModal","setEditPost","size","props","AllPost","posts","setDeletePost","modal","setModal","postId","setPostId","find","length","map","post","Card","CardHeader","index","deletePost","CardBody","Home","postReducer","setAddPost","addPostModal","setAddPostModal","toggleAddPost","addPost","TopNav","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","to","App","Container","path","initialState","uuid","action","filter","s","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13aebdb2.chunk.js","sourcesContent":["export const ADD_CATEGORY = \"ADD_CATEGORY\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const EDIT_POST = \"EDIT_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n","import { ADD_POST, EDIT_POST, DELETE_POST, ADD_CATEGORY } from \"./actionTypes\";\r\n\r\nexport const addPost = (title, content, categories) => {\r\n  return {\r\n    type: ADD_POST,\r\n    title,\r\n    content,\r\n    categories,\r\n  };\r\n};\r\n\r\nexport const editPost = (props) => {\r\n  return {\r\n    type: EDIT_POST,\r\n    ...props,\r\n  };\r\n};\r\n\r\nexport const deletePost = (id) => {\r\n  return {\r\n    type: DELETE_POST,\r\n    id,\r\n  };\r\n};\r\nexport const addCatagories = (id) => {\r\n  return {\r\n    type: ADD_CATEGORY,\r\n    id,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Row, Col, Button } from \"reactstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addCatagories } from \"../redux\";\r\n\r\nconst CreateCategory = () => {\r\n  const setCatagories = useDispatch();\r\n  const [newLabel, setNewLabel] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center mt-5\">Create Category</h3>\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs=\"7\">\r\n          <Form>\r\n            <FormGroup>\r\n              <Label>Label</Label>\r\n              <Input\r\n                name=\"label\"\r\n                placeholder=\"Give category Label\"\r\n                value={newLabel}\r\n                onChange={({ target }) => {\r\n                  setNewLabel(target.value);\r\n                }}></Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Value</Label>\r\n              <Input\r\n                placeholder=\"Give category value\"\r\n                name=\"value\"\r\n                value={newValue}\r\n                onChange={({ target }) => {\r\n                  setNewValue(target.value);\r\n                }}></Input>\r\n            </FormGroup>\r\n            {/* onClick={handleSaveClick} */}\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setCatagories(\r\n                  addCatagories({ value: newValue, label: newLabel })\r\n                );\r\n                setNewLabel(\"\");\r\n                setNewValue(\"\");\r\n              }}>\r\n              Save\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateCategory;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addCatagories } from \"../redux\";\r\nconst CreateNewCategoryModal = ({\r\n  newCatagoriesModal,\r\n  setNewCatagoriesModal,\r\n  setNewCatagoriesValue,\r\n  newCatagoriesValue,\r\n}) => {\r\n  const toggle = () => setNewCatagoriesModal(!newCatagoriesModal);\r\n  const [newLabel, setNewLabel] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const setCatagories = useDispatch();\r\n\r\n  const handleSaveClick = () => {\r\n    if (Array.isArray(newCatagoriesValue)) {\r\n      setNewCatagoriesValue([\r\n        ...newCatagoriesValue,\r\n        {\r\n          value: newValue,\r\n          label: newLabel,\r\n        },\r\n      ]);\r\n    } else {\r\n      setNewCatagoriesValue([\r\n        {\r\n          value: newValue,\r\n          label: newLabel,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setCatagories(addCatagories({ value: newValue, label: newLabel }));\r\n\r\n    setNewLabel(\"\");\r\n    setNewValue(\"\");\r\n  };\r\n  return (\r\n    <Modal isOpen={newCatagoriesModal} toggle={toggle}>\r\n      <ModalHeader toggle={toggle}>Create New Category</ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label>Label</Label>\r\n          <Input\r\n            name=\"label\"\r\n            placeholder=\"Give category Label\"\r\n            value={newLabel}\r\n            onChange={({ target }) => {\r\n              setNewLabel(target.value);\r\n            }}></Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Value</Label>\r\n          <Input\r\n            placeholder=\"Give category value\"\r\n            name=\"value\"\r\n            value={newValue}\r\n            onChange={({ target }) => {\r\n              setNewValue(target.value);\r\n            }}></Input>\r\n        </FormGroup>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            handleSaveClick();\r\n            toggle();\r\n          }}>\r\n          Save\r\n        </Button>{\" \"}\r\n        <Button color=\"secondary\" onClick={toggle}>\r\n          Cancel\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateNewCategoryModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport CreateNewCategoryModal from \"./CreateNewCategoryModal\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PostForm = ({ handleDispatch, targetPost, btnText, toggle }) => {\r\n  const catagories = useSelector((state) => state.catagoriesReducer.catagories);\r\n\r\n  const [title, setTitle] = useState(targetPost?.title || \"\");\r\n  const [content, setContent] = useState(targetPost?.content || \"\");\r\n  const [newCatagoriesValue, setNewCatagoriesValue] = useState(\r\n    targetPost?.categories || []\r\n  );\r\n  const [newCatagoriesModal, setNewCatagoriesModal] = useState(false);\r\n  const [multiSelectOptions, setMultiSelectOptions] = useState(catagories);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleDispatch(targetPost?.id, title, content, newCatagoriesValue);\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setNewCatagoriesValue([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(newCatagoriesValue)) {\r\n      const isDuplicate = multiSelectOptions.every((item) =>\r\n        newCatagoriesValue.some((v) => v.value !== item.value)\r\n      );\r\n      console.log(isDuplicate);\r\n      isDuplicate &&\r\n        setMultiSelectOptions((prev) => [...prev, ...newCatagoriesValue]);\r\n    }\r\n  }, [newCatagoriesModal, newCatagoriesValue]);\r\n  return (\r\n    <>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"title\">Title</Label>\r\n          <Input\r\n            name=\"title\"\r\n            id=\"title\"\r\n            value={title}\r\n            placeholder=\"Enter Title\"\r\n            onChange={({ target }) => {\r\n              setTitle(target.value);\r\n            }}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"title\">Content</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"content\"\r\n            id=\"content\"\r\n            value={content}\r\n            placeholder=\"Content\"\r\n            onChange={({ target }) => setContent(target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Categories</Label>\r\n          <CreatableSelect\r\n            isClearable\r\n            onCreateOption={() => {\r\n              setNewCatagoriesModal(true);\r\n            }}\r\n            value={newCatagoriesValue}\r\n            isMulti\r\n            placeholder=\"Type to create new catagories\"\r\n            options={[...new Set(multiSelectOptions)]}\r\n            onChange={(values) => {\r\n              setNewCatagoriesValue(values);\r\n            }}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"float-right mt-4\"\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            handleSubmit(e);\r\n            toggle && toggle();\r\n          }}>\r\n          {btnText}\r\n        </Button>\r\n      </Form>\r\n      <CreateNewCategoryModal\r\n        newCatagoriesModal={newCatagoriesModal}\r\n        setNewCatagoriesModal={setNewCatagoriesModal}\r\n        setNewCatagoriesValue={setNewCatagoriesValue}\r\n        newCatagoriesValue={newCatagoriesValue}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editPost } from \"../redux\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nconst EditFormModal = ({ editModal, setEditModal, targetPost }) => {\r\n  const setEditPost = useDispatch();\r\n  const handleDispatch = (id, title, content, categories) => {\r\n    setEditPost(editPost({ id, title, content, categories }));\r\n  };\r\n\r\n  const toggle = () => setEditModal(!editModal);\r\n  return (\r\n    <div>\r\n      <Modal isOpen={editModal} toggle={toggle} size=\"lg\">\r\n        <ModalHeader toggle={toggle}>Edit Post</ModalHeader>\r\n        <ModalBody>\r\n          <PostForm\r\n            handleDispatch={handleDispatch}\r\n            targetPost={targetPost}\r\n            btnText=\"Save\"\r\n            toggle={toggle}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditFormModal;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Card, CardBody, CardHeader, Col, Row } from \"reactstrap\";\r\nimport { deletePost } from \"../redux\";\r\nimport EditFormModal from \"./EditFormModal\";\r\n\r\nconst AllPost = ({ posts }) => {\r\n  const setDeletePost = useDispatch();\r\n  const [modal, setModal] = useState(false);\r\n  const [postId, setPostId] = useState(false);\r\n\r\n  const targetPost = posts.find((item) => item.id === postId);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-center mt-5\">\r\n        <Col xs=\"8\">\r\n          {posts.length ? (\r\n            posts.map((post) => {\r\n              let { id, title, content, categories } = post;\r\n              return (\r\n                <Card key={id} className=\"mt-4\">\r\n                  <CardHeader className=\"bg-100\">\r\n                    <Row>\r\n                      <Col>\r\n                        <h4>{title}</h4>\r\n                        <b>Categories</b>:{\" \"}\r\n                        {categories.map((item, index) => {\r\n                          return (\r\n                            <span key={index} className=\"mr-2 text-primary\">\r\n                              #{item.value}\r\n                            </span>\r\n                          );\r\n                        })}\r\n                      </Col>\r\n                      <Col xs=\"auto\">\r\n                        <Button\r\n                          className=\"mr-3\"\r\n                          onClick={() => {\r\n                            setModal(true);\r\n                            setPostId(id);\r\n                          }}>\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          color=\"danger\"\r\n                          onClick={() => {\r\n                            setDeletePost(deletePost(id));\r\n                          }}>\r\n                          Delete\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardHeader>\r\n                  <CardBody>{content}</CardBody>\r\n                </Card>\r\n              );\r\n            })\r\n          ) : (\r\n            <h4 className=\"text-center\">No new post here, Add new Post</h4>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <EditFormModal\r\n        editModal={modal}\r\n        setEditModal={setModal}\r\n        targetPost={targetPost}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllPost;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Modal, ModalBody, Button, ModalHeader } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPost } from \"../redux\";\r\nimport PostForm from \"./PostForm\";\r\nimport AllPost from \"./AllPost\";\r\n\r\nconst Home = () => {\r\n  const posts = useSelector((state) => state.postReducer.posts);\r\n\r\n  const setAddPost = useDispatch();\r\n  const [addPostModal, setAddPostModal] = useState(false);\r\n  const handleDispatch = (id, title, content, categories) => {\r\n    setAddPost(addPost(title, content, categories));\r\n  };\r\n  const toggleAddPost = () => setAddPostModal(!addPostModal);\r\n  return (\r\n    <section className=\"pb-5\">\r\n      <h2 className=\"text-center mt-5\">All Post</h2>\r\n      <Modal isOpen={addPostModal} toggle={toggleAddPost}>\r\n        <ModalHeader toggle={toggleAddPost}>Create New Post</ModalHeader>\r\n        <ModalBody>\r\n          <PostForm\r\n            handleDispatch={handleDispatch}\r\n            btnText=\"Post\"\r\n            toggle={toggleAddPost}></PostForm>\r\n        </ModalBody>\r\n      </Modal>\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs=\"8\">\r\n          <Button size=\"lg\" color=\"info\" onClick={() => setAddPostModal(true)}>\r\n            Create post\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <AllPost posts={posts}></AllPost>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\n\r\nconst TopNav = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Devs</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/\">\r\n                Create Post\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/categories\">\r\n                Categories\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport CreateCategory from \"./components/CreateCategory\";\nimport Home from \"./components/Home\";\nimport TopNav from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <TopNav></TopNav>\n      <Switch>\n        <Route path=\"/categories\">\n          <CreateCategory></CreateCategory>\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import { v4 as uuid } from \"uuid\";\r\nimport { ADD_POST, EDIT_POST, DELETE_POST } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    posts: [\r\n      {\r\n        id: uuid(),\r\n        title: \"Good morning\",\r\n        content: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n        categories: [{ value: \"Simple\", label: \"Simple\" }],\r\n      },\r\n      {\r\n        id: uuid(),\r\n        title: \"Good after Noon\",\r\n        content:\r\n          \"Deserunt quasi voluptates perspiciatis ad, aspernatur odio nisi natus. \",\r\n        categories: [{ value: \"featured\", label: \"Featured\" }],\r\n      },\r\n      {\r\n        id: uuid(),\r\n        title: \"Good night\",\r\n        content:\r\n          \"Reprehenderit esse facere fuga. Quos officia sapiente voluptatibus unde facilis distinctio amet non!\",\r\n        categories: [{ value: \"Fashion\", label: \"Fashion\" }],\r\n      },\r\n    ],\r\n  },\r\n  postReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_POST:\r\n        return {\r\n          posts: [\r\n            ...state.posts,\r\n            {\r\n              id: uuid(),\r\n              title: action.title,\r\n              content: action.content,\r\n              categories: action.categories,\r\n            },\r\n          ],\r\n        };\r\n\r\n      case DELETE_POST:\r\n        return {\r\n          posts: [...state.posts.filter((post) => post.id !== action.id)],\r\n        };\r\n      case EDIT_POST:\r\n        return {\r\n          posts: [\r\n            ...state.posts.map((post) => {\r\n              if (post.id === action.id) {\r\n                post.title = action.title;\r\n                post.content = action.content;\r\n                post.categories = Array.isArray(action.categories)\r\n                  ? [...action.categories]\r\n                  : [];\r\n              }\r\n              return post;\r\n            }),\r\n          ],\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\nexport default postReducer;\r\n","import { ADD_CATEGORY } from \"../actionTypes\";\r\nconst s = {\r\n  catagories: [\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n  ],\r\n};\r\nconst catagoriesReducer = (state = s, action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY:\r\n      return { catagories: [...state.catagories, action.id] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default catagoriesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport postReducer from \"./postreducer\";\r\nimport catagoriesReducer from \"./catagoriesReducer\";\r\n\r\nexport default combineReducers({\r\n  postReducer,\r\n  catagoriesReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\n\r\nimport reducer from \"./redux/reducers/index\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}